# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import sprints_pb2 as sprints__pb2


class SprintsStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.NewTournament = channel.unary_unary(
        '/pb.Sprints/NewTournament',
        request_serializer=sprints__pb2.Tournament.SerializeToString,
        response_deserializer=sprints__pb2.Tournament.FromString,
        )
    self.NewRace = channel.unary_unary(
        '/pb.Sprints/NewRace',
        request_serializer=sprints__pb2.Race.SerializeToString,
        response_deserializer=sprints__pb2.Empty.FromString,
        )
    self.StartRace = channel.unary_unary(
        '/pb.Sprints/StartRace',
        request_serializer=sprints__pb2.Starter.SerializeToString,
        response_deserializer=sprints__pb2.Player.FromString,
        )
    self.AbortRace = channel.unary_unary(
        '/pb.Sprints/AbortRace',
        request_serializer=sprints__pb2.AbortMessage.SerializeToString,
        response_deserializer=sprints__pb2.Empty.FromString,
        )
    self.ConfigureVis = channel.unary_unary(
        '/pb.Sprints/ConfigureVis',
        request_serializer=sprints__pb2.VisConfiguration.SerializeToString,
        response_deserializer=sprints__pb2.Empty.FromString,
        )
    self.GetResults = channel.unary_stream(
        '/pb.Sprints/GetResults',
        request_serializer=sprints__pb2.ResultSpec.SerializeToString,
        response_deserializer=sprints__pb2.Result.FromString,
        )
    self.GetTournamentNames = channel.unary_unary(
        '/pb.Sprints/GetTournamentNames',
        request_serializer=sprints__pb2.Empty.SerializeToString,
        response_deserializer=sprints__pb2.TournamentNames.FromString,
        )
    self.GetCurrentTournament = channel.unary_unary(
        '/pb.Sprints/GetCurrentTournament',
        request_serializer=sprints__pb2.Empty.SerializeToString,
        response_deserializer=sprints__pb2.Tournament.FromString,
        )
    self.LoadTournament = channel.unary_unary(
        '/pb.Sprints/LoadTournament',
        request_serializer=sprints__pb2.TournamentSpec.SerializeToString,
        response_deserializer=sprints__pb2.Tournament.FromString,
        )
    self.ShowResults = channel.unary_unary(
        '/pb.Sprints/ShowResults',
        request_serializer=sprints__pb2.ResultSpec.SerializeToString,
        response_deserializer=sprints__pb2.Empty.FromString,
        )


class SprintsServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def NewTournament(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def NewRace(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartRace(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AbortRace(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ConfigureVis(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetResults(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetTournamentNames(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetCurrentTournament(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LoadTournament(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ShowResults(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SprintsServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'NewTournament': grpc.unary_unary_rpc_method_handler(
          servicer.NewTournament,
          request_deserializer=sprints__pb2.Tournament.FromString,
          response_serializer=sprints__pb2.Tournament.SerializeToString,
      ),
      'NewRace': grpc.unary_unary_rpc_method_handler(
          servicer.NewRace,
          request_deserializer=sprints__pb2.Race.FromString,
          response_serializer=sprints__pb2.Empty.SerializeToString,
      ),
      'StartRace': grpc.unary_unary_rpc_method_handler(
          servicer.StartRace,
          request_deserializer=sprints__pb2.Starter.FromString,
          response_serializer=sprints__pb2.Player.SerializeToString,
      ),
      'AbortRace': grpc.unary_unary_rpc_method_handler(
          servicer.AbortRace,
          request_deserializer=sprints__pb2.AbortMessage.FromString,
          response_serializer=sprints__pb2.Empty.SerializeToString,
      ),
      'ConfigureVis': grpc.unary_unary_rpc_method_handler(
          servicer.ConfigureVis,
          request_deserializer=sprints__pb2.VisConfiguration.FromString,
          response_serializer=sprints__pb2.Empty.SerializeToString,
      ),
      'GetResults': grpc.unary_stream_rpc_method_handler(
          servicer.GetResults,
          request_deserializer=sprints__pb2.ResultSpec.FromString,
          response_serializer=sprints__pb2.Result.SerializeToString,
      ),
      'GetTournamentNames': grpc.unary_unary_rpc_method_handler(
          servicer.GetTournamentNames,
          request_deserializer=sprints__pb2.Empty.FromString,
          response_serializer=sprints__pb2.TournamentNames.SerializeToString,
      ),
      'GetCurrentTournament': grpc.unary_unary_rpc_method_handler(
          servicer.GetCurrentTournament,
          request_deserializer=sprints__pb2.Empty.FromString,
          response_serializer=sprints__pb2.Tournament.SerializeToString,
      ),
      'LoadTournament': grpc.unary_unary_rpc_method_handler(
          servicer.LoadTournament,
          request_deserializer=sprints__pb2.TournamentSpec.FromString,
          response_serializer=sprints__pb2.Tournament.SerializeToString,
      ),
      'ShowResults': grpc.unary_unary_rpc_method_handler(
          servicer.ShowResults,
          request_deserializer=sprints__pb2.ResultSpec.FromString,
          response_serializer=sprints__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'pb.Sprints', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class VisualStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.NewTournament = channel.unary_unary(
        '/pb.Visual/NewTournament',
        request_serializer=sprints__pb2.Tournament.SerializeToString,
        response_deserializer=sprints__pb2.Empty.FromString,
        )
    self.NewRace = channel.unary_unary(
        '/pb.Visual/NewRace',
        request_serializer=sprints__pb2.Race.SerializeToString,
        response_deserializer=sprints__pb2.Empty.FromString,
        )
    self.StartRace = channel.unary_unary(
        '/pb.Visual/StartRace',
        request_serializer=sprints__pb2.Starter.SerializeToString,
        response_deserializer=sprints__pb2.Empty.FromString,
        )
    self.AbortRace = channel.unary_unary(
        '/pb.Visual/AbortRace',
        request_serializer=sprints__pb2.AbortMessage.SerializeToString,
        response_deserializer=sprints__pb2.Empty.FromString,
        )
    self.UpdateRace = channel.stream_unary(
        '/pb.Visual/UpdateRace',
        request_serializer=sprints__pb2.Racer.SerializeToString,
        response_deserializer=sprints__pb2.Empty.FromString,
        )
    self.FinishRace = channel.unary_unary(
        '/pb.Visual/FinishRace',
        request_serializer=sprints__pb2.Results.SerializeToString,
        response_deserializer=sprints__pb2.Empty.FromString,
        )
    self.ShowResults = channel.unary_unary(
        '/pb.Visual/ShowResults',
        request_serializer=sprints__pb2.Results.SerializeToString,
        response_deserializer=sprints__pb2.Empty.FromString,
        )
    self.ConfigureVis = channel.unary_unary(
        '/pb.Visual/ConfigureVis',
        request_serializer=sprints__pb2.VisConfiguration.SerializeToString,
        response_deserializer=sprints__pb2.Empty.FromString,
        )
    self.StopVis = channel.unary_unary(
        '/pb.Visual/StopVis',
        request_serializer=sprints__pb2.Empty.SerializeToString,
        response_deserializer=sprints__pb2.Empty.FromString,
        )


class VisualServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def NewTournament(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def NewRace(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartRace(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AbortRace(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateRace(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FinishRace(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ShowResults(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ConfigureVis(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopVis(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_VisualServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'NewTournament': grpc.unary_unary_rpc_method_handler(
          servicer.NewTournament,
          request_deserializer=sprints__pb2.Tournament.FromString,
          response_serializer=sprints__pb2.Empty.SerializeToString,
      ),
      'NewRace': grpc.unary_unary_rpc_method_handler(
          servicer.NewRace,
          request_deserializer=sprints__pb2.Race.FromString,
          response_serializer=sprints__pb2.Empty.SerializeToString,
      ),
      'StartRace': grpc.unary_unary_rpc_method_handler(
          servicer.StartRace,
          request_deserializer=sprints__pb2.Starter.FromString,
          response_serializer=sprints__pb2.Empty.SerializeToString,
      ),
      'AbortRace': grpc.unary_unary_rpc_method_handler(
          servicer.AbortRace,
          request_deserializer=sprints__pb2.AbortMessage.FromString,
          response_serializer=sprints__pb2.Empty.SerializeToString,
      ),
      'UpdateRace': grpc.stream_unary_rpc_method_handler(
          servicer.UpdateRace,
          request_deserializer=sprints__pb2.Racer.FromString,
          response_serializer=sprints__pb2.Empty.SerializeToString,
      ),
      'FinishRace': grpc.unary_unary_rpc_method_handler(
          servicer.FinishRace,
          request_deserializer=sprints__pb2.Results.FromString,
          response_serializer=sprints__pb2.Empty.SerializeToString,
      ),
      'ShowResults': grpc.unary_unary_rpc_method_handler(
          servicer.ShowResults,
          request_deserializer=sprints__pb2.Results.FromString,
          response_serializer=sprints__pb2.Empty.SerializeToString,
      ),
      'ConfigureVis': grpc.unary_unary_rpc_method_handler(
          servicer.ConfigureVis,
          request_deserializer=sprints__pb2.VisConfiguration.FromString,
          response_serializer=sprints__pb2.Empty.SerializeToString,
      ),
      'StopVis': grpc.unary_unary_rpc_method_handler(
          servicer.StopVis,
          request_deserializer=sprints__pb2.Empty.FromString,
          response_serializer=sprints__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'pb.Visual', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
